[{"/Users/timsharkey/Desktop/voice_expense/src/index.js":"1","/Users/timsharkey/Desktop/voice_expense/src/App.js":"2","/Users/timsharkey/Desktop/voice_expense/src/components/Details/styles.js":"3","/Users/timsharkey/Desktop/voice_expense/src/components/Details/DetailsCard.js":"4","/Users/timsharkey/Desktop/voice_expense/src/styles.js":"5","/Users/timsharkey/Desktop/voice_expense/src/components/Main/styles.js":"6","/Users/timsharkey/Desktop/voice_expense/src/components/Main/Form/styles.js":"7","/Users/timsharkey/Desktop/voice_expense/src/components/Main/Main.jsx":"8","/Users/timsharkey/Desktop/voice_expense/src/components/Main/List/List.js":"9","/Users/timsharkey/Desktop/voice_expense/src/context/context.js":"10","/Users/timsharkey/Desktop/voice_expense/src/context/contextReducer.js":"11","/Users/timsharkey/Desktop/voice_expense/src/components/Main/List/styles.js":"12","/Users/timsharkey/Desktop/voice_expense/src/components/Main/Form/Form.js":"13","/Users/timsharkey/Desktop/voice_expense/src/constants/categories.js":"14","/Users/timsharkey/Desktop/voice_expense/src/utils/formatDate.js":"15","/Users/timsharkey/Desktop/voice_expense/src/useTransactions.js":"16","/Users/timsharkey/Desktop/voice_expense/src/components/SnackBar/styles.js":"17","/Users/timsharkey/Desktop/voice_expense/src/components/SnackBar/Snackbar.js":"18","/Users/timsharkey/Desktop/voice_expense/src/components/InfoCard.js":"19"},{"size":416,"mtime":1610321448520,"results":"20","hashOfConfig":"21"},{"size":1532,"mtime":1611082692831,"results":"22","hashOfConfig":"21"},{"size":237,"mtime":1608660760700,"results":"23","hashOfConfig":"21"},{"size":669,"mtime":1610048767163,"results":"24","hashOfConfig":"21"},{"size":552,"mtime":1608664335281,"results":"25","hashOfConfig":"21"},{"size":490,"mtime":1609090514902,"results":"26","hashOfConfig":"21"},{"size":235,"mtime":1609091862343,"results":"27","hashOfConfig":"21"},{"size":1144,"mtime":1611081259500,"results":"28","hashOfConfig":"21"},{"size":2125,"mtime":1610039907719,"results":"29","hashOfConfig":"21"},{"size":1615,"mtime":1611078973388,"results":"30","hashOfConfig":"21"},{"size":538,"mtime":1611077782081,"results":"31","hashOfConfig":"21"},{"size":399,"mtime":1609092931297,"results":"32","hashOfConfig":"21"},{"size":5145,"mtime":1611080085733,"results":"33","hashOfConfig":"21"},{"size":1710,"mtime":1610040077325,"results":"34","hashOfConfig":"21"},{"size":337,"mtime":1610044215030,"results":"35","hashOfConfig":"21"},{"size":1132,"mtime":1612377699399,"results":"36","hashOfConfig":"21"},{"size":196,"mtime":1611079706270,"results":"37","hashOfConfig":"21"},{"size":862,"mtime":1611080209418,"results":"38","hashOfConfig":"21"},{"size":511,"mtime":1611081156400,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ebwebr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/timsharkey/Desktop/voice_expense/src/index.js",[],["82","83"],"/Users/timsharkey/Desktop/voice_expense/src/App.js",["84"],"/Users/timsharkey/Desktop/voice_expense/src/components/Details/styles.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/Details/DetailsCard.js",[],"/Users/timsharkey/Desktop/voice_expense/src/styles.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/styles.js",[],["85","86"],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/Form/styles.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/Main.jsx",[],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/List/List.js",[],"/Users/timsharkey/Desktop/voice_expense/src/context/context.js",[],"/Users/timsharkey/Desktop/voice_expense/src/context/contextReducer.js",[],["87","88"],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/List/styles.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/Main/Form/Form.js",["89"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CustomizedSnackbar from \"../../SnackBar/Snackbar\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { useSpeechContext } from \"@speechly/react-client\";\n\nimport useStyles from \"./styles\";\n\nconst Form = () => {\n  const [open, setOpen] = useState(false);\n  const initialState = {\n    amount: \"\",\n    category: \"\",\n    type: \"Income\",\n    date: formatDate(new Date()),\n  };\n\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n\n  // context\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount) || !formData.date.includes(\"-\")))\n      return;\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    };\n    setOpen(true);\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n  //   console.log(formData);\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((e) => {\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n        // console.log(e.value);\n        switch (e.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: e.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category: category });\n            } else if (\n              expenseCategories.map((iC) => iC.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category: category });\n            }\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: e.value });\n            break;\n          default:\n            break;\n        }\n      });\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const classes = useStyles();\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment && segment.words.map((w) => w.value).join(\" \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <InputLabel>Category</InputLabel>\n            <Select\n              value={formData.category}\n              onChange={(e) =>\n                setFormData({ ...formData, category: e.target.value })\n              }\n            >\n              {selectedCategories.map((c) => (\n                <MenuItem key={c.type} value={c.type}>\n                  {c.type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n        />\n      </Grid>\n      <Button\n        onClick={createTransaction}\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/Users/timsharkey/Desktop/voice_expense/src/constants/categories.js",[],"/Users/timsharkey/Desktop/voice_expense/src/utils/formatDate.js",[],"/Users/timsharkey/Desktop/voice_expense/src/useTransactions.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/SnackBar/styles.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/SnackBar/Snackbar.js",[],"/Users/timsharkey/Desktop/voice_expense/src/components/InfoCard.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":8,"column":3,"nodeType":"96","messageId":"97","endLine":8,"endColumn":13},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"90","replacedBy":"100"},{"ruleId":"92","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":107,"column":6,"nodeType":"104","endLine":107,"endColumn":15,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'ErrorPanel' is defined but never used.","Identifier","unusedVar",["106"],["107"],["106"],["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction', 'formData', and 'initialState'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [createTransaction, formData, initialState, segment]",{"range":"111","text":"112"},[2955,2964],"[createTransaction, formData, initialState, segment]"]